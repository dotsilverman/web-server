* require/exports: http://openmymind.net/2012/2/3/Node-Require-and-Exports/

*get corresponds to http request method

* a "route" is a different url route: like http:dot/aboutme or hettp:dot/runningstuff
	
	* routes require 2 input parameters: request, response

* HTML 

	* doctype tells us what type of html we're using

* SECTION 47: MIDDLEWEAR IS AWESOME

* middlewear makes it easy to run a specific function for all of your routes (have a specific function for http://dot/aboutme vs http://dot/homepage).

	* application vs route middlewear

	* middlewear functions include 3 parameters:

		* requireAuthentication: function (request, response, next) {}

	* whenever want to add route-specific middlewear, add it as the 2nd 

	* request objects

	* favicon.ico

* express documentation: http://expressjs.com/en/api.html#app.use

* SECTION 48: USING GIT

* git configurations we used
	
	* git config --global user.name "Dot Silverman"
	* git config --global user.email "dot.silverman10@gmail.com"
	* git conifg --global push.default matching
	* git config --flobal alias.co checkout

* useful commands
	* ls -a command
	* git status
	* git rm --cached -r node_modules
	* make a file called .gitignore with path of files for git to ignore when add files 
	* commit a file: git commit -a -m "Initialize repo"

* git commit -a will add all new and old files and update, while just git commit -a will update 
  files that had already been added to repo

* "refactoring" a program

* SECTION 50: Heroku

* generate an ssh key w/terminal command: ssh-keygen -t rsa -b 4096 -C "dot.silverman10@gmail.com"

* to see your rsa key, type terminal command: more ~/.ssh/id_ras.pub

* then needed to add the new ssh key to the ssh-agent: https://help.github.com/articles/adding-a-new-ssh-key-to-the-ssh-agent/

* git push -u original master: command where want to push to original and the brach is master

* git remote -v 

* git u flag: The -u option do the following: For every branch that is up to date or successfully pushed, add upstream (tracking) reference, used by argument-less git-pull and other commands. (from http://stackoverflow.com/questions/18867824/what-does-the-u-flag-mean-in-git-push-u-origin-master)
